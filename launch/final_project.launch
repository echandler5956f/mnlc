<launch>
  <!-- Globals -->
  <arg name="sim" default="1"/>
  <arg name="mapping" default="1"/>
  <param name="sim" value="$(arg sim)"/>

  <!-- Map Static Transform -->
  <node name="map_static_transform" pkg="tf" type="static_transform_publisher" args="5 0 0 0 0 0 1 /map /world 100"/>

  <!-- Turtlebot3 -->
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="burger" />
  </include>

  <!-- Gazebo -->
  <arg name="x_pos" default="0.40"/>
  <arg name="y_pos" default="0.4"/>
  <arg name="z_pos" default="0.05"/>
  <arg name="maze"  default="maze2" />
  <env name="GAZEBO_MODEL_PATH" value="$(find RBE3002_template)/models:$(optenv GAZEBO_MODEL_PATH"/>
  <include if="$(arg sim)" file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find RBE3002_template)/worlds/$(arg maze).world"/>  
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="false"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>
  <param name="robot_description" command="$(find xacro)/xacro $(find turtlebot3_description)/urdf/turtlebot3_burger.urdf.xacro" />
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model turtlebot3_burger -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

  <!-- RTabMap -->
  <include file="$(find rbe3002)/launch/rtab_map.launch"/>

  <!-- Riz -->
  <node name="rviz" pkg="rviz" type="rviz" required="true" args="-d $(find rbe3002)/rviz/rbe3002_final_demo.rviz"/>

  <!-- MNLC -->
  <!-- Mapping, Navigation, and Localization Controller -->

  <!-- Robot Controllers -->
  <node name="mnlc_controller"                      pkg="rbe3002" type="mnlc_controller.py"                      output="screen"/>

  <!-- Global Planners -->
  <node name="mnlc_a_star"                          pkg="rbe3002" type="mnlc_a_star.py"                          output="screen"/>

  <!-- Local Planners -->
  <node name="mnlc_pure_pursuit"                    pkg="rbe3002" type="mnlc_pure_pursuit.py"                    output="screen"/>

  <!-- Frontier Assigners -->
  <node name="mnlc_assigner"                        pkg="rbe3002" type="mnlc_assigner.py"                        output="screen"/>

  <!-- Frontier Filters -->
  <node name="mnlc_sklearn_frontier_filter"         pkg="rbe3002" type="mnlc_sklearn_frontier_filter.py"         output="screen"/>

  <!-- Global Frontier Detectors -->
  <!-- <node name="mnlc_global_opencv_frontier_detector" pkg="rbe3002" type="mnlc_global_opencv_frontier_detector.py" output="screen"/> -->
  <node name="mnlc_global_rrt_detector1"            pkg="rbe3002" type="mnlc_global_rrt_detector.py"             output="screen"/>

  <!-- Local Frontier Detectors -->
  <node name="mnlc_local_rrt_detector1"             pkg="rbe3002" type="mnlc_local_rrt_detector.py"              output="screen"/>
  <node name="mnlc_local_rrt_detector2"             pkg="rbe3002" type="mnlc_local_rrt_detector.py"              output="screen"/>
  <node name="mnlc_local_rrt_detector3"             pkg="rbe3002" type="mnlc_local_rrt_detector.py"              output="screen"/>

  <!-- Costmaps -->
  <node name="mnlc_global_costmap_opencv"           pkg="rbe3002" type="mnlc_global_costmap_opencv"              output="screen"/>
  <!-- <node name="mnlc_global_costmap_opencv"           pkg="rbe3002" type="mnlc_global_costmap_opencv.py"           output="screen"/> -->
  <!-- <node name="mnlc_local_costmap_opencv"            pkg="rbe3002" type="mnlc_local_costmap_opencv.py"            output="screen"/> -->

  <!-- Parameters-->
  <rosparam file="$(find rbe3002)/param/mnlc_controller_params.yaml"                      command="load"/>
  <rosparam file="$(find rbe3002)/param/mnlc_a_star_params.yaml"                          command="load"/>
  <rosparam file="$(find rbe3002)/param/mnlc_pure_pursuit_params.yaml"                    command="load"/>
  <rosparam file="$(find rbe3002)/param/mnlc_assigner_params.yaml"                        command="load"/>
  <rosparam file="$(find rbe3002)/param/mnlc_sklearn_frontier_filter_params.yaml"         command="load"/>
  <rosparam file="$(find rbe3002)/param/mnlc_global_opencv_frontier_detector_params.yaml" command="load"/>
  <rosparam file="$(find rbe3002)/param/mnlc_global_rrt_detector_params.yaml"             command="load"/>
  <rosparam file="$(find rbe3002)/param/mnlc_local_rrt_detector_params.yaml"              command="load"/>
  <rosparam file="$(find rbe3002)/param/mnlc_global_costmap_opencv_params.yaml"           command="load"/>
  <rosparam file="$(find rbe3002)/param/mnlc_local_costmap_opencv_params.yaml"            command="load"/>

  <!-- Auto-SSH -->
  <!-- <node unless="$(arg sim)" name="autoSSH" pkg="rbe3002" type="autoSSH.sh" output="screen"/> -->

</launch>
